@using Ext.Net;
@using Ext.Net.MVC;
@model System.Collections.IEnumerable

@{
    ViewBag.Title = "Principal - .:Clínica Odontólogica:.";
    Layout = null;
    var X = Html.X();
}

<!DOCTYPE html>
<html>
<head>
    <title>Principal - .:Clínica Odontólogica:.</title>
    <style>
        div.item-wrap {
            float: left;
            border: 1px solid transparent;
            margin: 5px 25px 5px 25px;
            width: 100px;
            cursor: pointer;
            height: 120px;
            text-align: center;
        }

            div.item-wrap img {
                margin: 5px 0px 0px 5px;
                width: 61px;
                height: 77px;
            }

            div.item-wrap h6 {
                font-size: 14px;
                color: #3A4B5B;
                font-family: tahoma,arial,san-serif;
                margin: 0px;
            }

        div.x-view-over {
            border: solid 1px silver;
        }

        #items-ct {
            padding: 0px 30px 24px 30px;
        }

            #items-ct h2 {
                border-bottom: 2px solid #3A4B5B;
                cursor: pointer;
            }

                #items-ct h2 div {
                    background  : transparent url(@Url.Content("~/xml/group-expand-sprite.gif")) no-repeat 3px -47px;
                    padding: 4px 4px 4px 17px;
                    font-family: tahoma,arial,san-serif;
                    font-size: 12px;
                    color: #3A4B5B;
                }

            #items-ct .collapsed h2 div {
                background-position: 3px 3px;
            }

            #items-ct .group-body {
                margin-left: 2px;
            }

            #items-ct .collapsed .group-body {
                display: none;
            }
    </style>
    <script>
        //Para abrir las pestañas
        var loadPage = function (tabPanel, record) {
            var tab = tabPanel.getComponent("node" + record.data.url);

            if (!tab) {
                tab = tabPanel.add({
                    id: "node" + record.data.url,
                    title: record.data.text,
                    closable: true,
                    loader: {
                        url: record.data.url,
                        renderer: "frame",
                        loadMask: {
                            showMask: true,
                            msg: "Cargando " + record.data.url + "..."
                        }
                    },
                    autoScroll: true
                });
            }

            tabPanel.setActiveTab(tab);
        };

        //Para las alertas
        var itemClick = function (view, record, item, index, e) {
            var group = e.getTarget("h2", 3, true),
                subItem;

            if (group) {
                group.up("div").toggleCls("collapsed");
                return false;
            }

            subItem = e.getTarget(".item-wrap");

            if (subItem) {
                Ext.Msg.alert("Click", "The node with id='" + subItem.id + "' has been clicked");
            }
        };
    </script>
</head>
<body>
    @(X.ResourceManager())

    @(X.Viewport()
            .Layout(LayoutType.Border)
            .Items(
                X.Panel()
                    .Region(Region.North)
                    .Split(false)
                    .Height(45)
                    .BodyPadding(6)
                    .Html("Banner del sistema")
                    .Collapsible(false)
                    .BodyStyle("background-image: url(../Img/banner-superior.jpg)"),

                X.TreePanel()
                .Width(250)
                .Icon(Icon.BookOpen)
                .Title("Opciones")
                .Region(Region.West)
                .Split(true)
                .Collapsible(true)
                .AutoScroll(true)
                /*.TopBar(
                    X.Toolbar()
                        .Items(
                            X.Button()
                                .Text("Expand All")
                                .Handler("this.up('treepanel').expandAll();"),

                            X.Button()
                                .Text("Collapse All")
                                .Handler("this.up('treepanel').collapseAll();")
                        )
                )*/
                .Root(
                    X.Node()
                     .Text("Raiz")
                     .Expanded(true)
                     .Children(
                        X.Node()
                            .Text("Gestión de citas")
                            .Icon(Icon.BookOpenMark)
                            .Children(
                                X.Node()
                                    .Text("Agenda")
                                    .Leaf(true)
                                    .CustomAttributes(new ConfigItem("url", "Agenda")),
                                X.Node()
                                    .Text("Asignación de cubículos")
                                    .Leaf(true)
                                    .CustomAttributes(new ConfigItem("url", "Cita"))
                            ),

                     X.Node()
                        .Text("Gestión de consultas")
                        .Icon(Icon.TableGear)
                        .Children(
                            X.Node()
                                .Text("Consultas")
                                .Leaf(true)
                                .CustomAttributes(new ConfigItem("url", "Consulta"))
                                ),

                      X.Node()
                        .Text("Gestión de pacientes")
                        .Icon(Icon.UserGray)
                        .Children(
                            X.Node()
                                .Text("Expediente")
                                .Leaf(true)
                                .CustomAttributes(new ConfigItem("url", "Expediente"))
                                ),

                      X.Node()
                        .Text("Gestión de pagos")
                        .Icon(Icon.Money)
                        .Children(
                            X.Node()
                                .Text("Pagos")
                                .Leaf(true)
                                .CustomAttributes(new ConfigItem("url", "OrdenDePago"))
                                )
                 )
            )
            .RootVisible(false)
            .Buttons(
                X.Button()
                  .Text("Cerrar Sesión")
                  .Href("Index")
                  .HrefTarget("_self")
                  .Icon(Icon.DoorOut)
            )
            .BottomBar(
                X.StatusBar().AutoClear(1500)
            )
            .Listeners(l =>
            {
                //l.ItemClick.Handler = "this.down('statusbar').setStatus({text: 'Node Selected: <b>' + record.data.text + '<br />', clear: false});";
                l.ItemClick.Handler = "if (record.data.url) { loadPage(this.next('tabpanel'), record); return false; }";

                l.ItemExpand.Handler = "this.down('statusbar').setStatus({text: 'Opción: <b>' + item.data.text + '<br />', clear: false});";
                l.ItemExpand.Buffer = 50;

                l.ItemCollapse.Handler = "this.down('statusbar').setStatus({text: 'Opción: <b>' + item.data.text + '<br />', clear: false});";
                l.ItemCollapse.Buffer = 50;
            }),

            X.TabPanel()
                .Region(Region.Center)
                .Items(
                    X.Panel()
                        .Title("Alertas")
                        .Cls("items-view")
                                .Width(800)
                                .TopBar(
                                    Html.X().Toolbar()
                                        .Flat(true)
                                        .Items(
                                            Html.X().ToolbarFill(),

                                            Html.X().Button()
                                                .Icon(Icon.BulletPlus)
                                                .Text("Expandir")
                                                .Handler("this.up('panel').down('dataview').el.select('.group-header').removeCls('collapsed');"),

                                            Html.X().Button()
                                                .Icon(Icon.BulletMinus)
                                                .Text("Colapsar")
                                                .Handler("this.up('panel').down('dataview').el.select('.group-header').addCls('collapsed');"),

                                            Html.X().ToolbarSpacer().Width(30)
                                        )
                                )
                                .Items(
                                Html.X().DataView()
                                    .SingleSelect(true)
                                    .ItemSelector("div.group-header")
                                    .EmptyText("No items to display")
                                    .Store(
                                        Html.X().Store()
                                            .DataSource(Model)
                                            .Model(
                                                Html.X().Model()
                                                    .Fields(
                                                        Html.X().ModelField().Name("Title"),
                                                        Html.X().ModelField().Name("Items").Type(ModelFieldType.Object)
                                                    )
                                            )
                                    )
                                    .Tpl(@<text>
                                        <div id="items-ct">
                                            <tpl for=".">
                                                <div class="group-header">
                                                    <h2><div>{Title}</div></h2>
                                                    <div class="group-body">
                                                        <tpl for="Items">
                                                            <div id="{Id}" class="item-wrap">
                                                                <img src="{Icon}" />
                                                                <div>
                                                                    <h6>{Title}</h6>
                                                                </div>
                                                            </div>
                                                        </tpl>
                                                        <div style="clear:left"></div>
                                                    </div>
                                                </div>
                                            </tpl>
                                        </div>
                                    </text>)
                                    .Listeners(l =>
                                        {
                                            l.ItemClick.Fn = "itemClick";

                                            l.Refresh.Handler = "this.el.select('.item-wrap', true).addClsOnOver('x-view-over');";
                                            l.Refresh.Delay = 100;
                                        })
                )
                )
        )
    )
</body>
</html>


