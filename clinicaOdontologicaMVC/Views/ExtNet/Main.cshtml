@using Ext.Net;
@using Ext.Net.MVC;

@{
    ViewBag.Title = "Principal - .:Clínica Odontólogica:.";
    Layout = null;
    var X = Html.X();
}

<!DOCTYPE html>
<html>
<head>
    <title>Principal - .:Clínica Odontólogica:.</title>
    <script>
        var loadPage = function (tabPanel, record) {
            var tab = tabPanel.getComponent("node" + record.data.hash);

            if (!tab) {
                tab = tabPanel.add({
                    id: "node" + record.data.hash,
                    title    : record.data.text,
                    closable : true,
                    loader : {
                        url      : record.data.url,
                        renderer     : "frame",
                        loadMask : {
                            showMask : true,
                            msg  : "Cargando " + record.data.url + "..."
                        }
                    },
                    autoScroll : true
                });
            }

            tabPanel.setActiveTab(tab);
        };
    </script>
</head>
<body>
    @(X.ResourceManager())

    @(X.Viewport()
            .Layout(LayoutType.Border)
            .Items(
                X.Panel()
                    .Region(Region.North)
                    .Split(false)
                    .Height(45)
                    .BodyPadding(6)
                    .Html("Banner del sistema")
                    .Collapsible(false)
                    .BodyStyle("background-image: url(../Img/banner-superior.jpg)"),

                X.TreePanel()
                .Width(250)
                .Icon(Icon.BookOpen)
                .Title("Opciones")
                .Region(Region.West)
                .Split(true)
                .Collapsible(true)
                .AutoScroll(true)
                /*.TopBar(
                    X.Toolbar()
                        .Items(
                            X.Button()
                                .Text("Expand All")
                                .Handler("this.up('treepanel').expandAll();"),

                            X.Button()
                                .Text("Collapse All")
                                .Handler("this.up('treepanel').collapseAll();")
                        )
                )*/
                .Root(
                    X.Node()
                     .Text("Raiz")
                     .Expanded(true)
                     .Children(
                        X.Node()
                            .Text("Gestión de citas")
                            .Icon(Icon.BookOpenMark)
                            .Children(
                                X.Node()
                                    .Text("Agenda")
                                    .Leaf(true)
                                    .CustomAttributes(new ConfigItem("url", "Agenda")),
                                X.Node()
                                    .Text("Asignación de cubículos")
                                    .Leaf(true)
                                    .CustomAttributes(new ConfigItem("url", "Cita"))
                            ),

                     X.Node()
                        .Text("Gestión de consultas")
                        .Icon(Icon.TableGear)
                        .Children(
                            X.Node()
                                .Text("Consultas")
                                .Leaf(true)
                                .CustomAttributes(new ConfigItem("url", "Consulta"))
                                ),

                      X.Node()
                        .Text("Gestión de pacientes")
                        .Icon(Icon.UserGray)
                        .Children(
                            X.Node()
                                .Text("Expediente")
                                .Leaf(true)
                                .CustomAttributes(new ConfigItem("url", "Expediente"))
                                ),

                      X.Node()
                        .Text("Gestión de pagos")
                        .Icon(Icon.Money)
                        .Children(
                            X.Node()
                                .Text("Pagos")
                                .Leaf(true)
                                .CustomAttributes(new ConfigItem("url", "OrdenDePago"))
                                )
                 )
            )
            .RootVisible(false)
            .Buttons(
                X.Button()
                  .Text("Cerrar Sesión")
                  .Href("Index")
                  .HrefTarget("_self")
                  .Icon(Icon.DoorOut)
            )
            .BottomBar(
                X.StatusBar().AutoClear(1500)
            )
            .Listeners(l =>
            {
                //l.ItemClick.Handler = "this.down('statusbar').setStatus({text: 'Node Selected: <b>' + record.data.text + '<br />', clear: false});";
                l.ItemClick.Handler = "if (record.data.url) { loadPage(this.next('tabpanel'), record); return false; }";

                l.ItemExpand.Handler = "this.down('statusbar').setStatus({text: 'Opción: <b>' + item.data.text + '<br />', clear: false});";
                l.ItemExpand.Buffer = 50;

                l.ItemCollapse.Handler = "this.down('statusbar').setStatus({text: 'Opción: <b>' + item.data.text + '<br />', clear: false});";
                l.ItemCollapse.Buffer = 50;
            }),

            X.TabPanel()
                .Region(Region.Center)
                .Items(
                    X.Panel()
                        .Title("Inicio")
                        .Border(false)
                        .BodyPadding(6)
                        .Html("<h1>Area principal del aplicativo</h1>")
                )
        )
    )
</body>
</html>


