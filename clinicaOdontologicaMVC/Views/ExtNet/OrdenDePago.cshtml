@model object[]

@{
    ViewBag.Title = "Orden de pago - .:Clínica Odontólogica:.";
    Layout = null;
    var X = Html.X();
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Orden de pago - .:Clínica Odontólogica:.</title>
    <script>
        var template = '<span style="color:{0};">{1}</span>';

        var change = function (value) {
            return Ext.String.format(template, (value > 0) ? "green" : "red", value);
        };

        var pctChange = function (value) {
            return Ext.String.format(template, (value > 0) ? "green" : "red", value + "%");
        };
    </script>
</head>
<body>
    @(X.ResourceManager())

    @(X.FormPanel()
        .ID("FormPanel1")
        .BodyPadding(5)
        .Layout(LayoutType.Column)
        .FieldDefaults(fd =>
        {
            fd.LabelAlign = LabelAlign.Left;
            fd.MsgTarget = MessageTarget.Side;
        })
        .Items(
            X.GridPanel()
                .Title("Pacientes pendientes de pago")
                .ColumnWidth(0.6)
                .Height(400)
                .Store(X.Store()
                    .ID("Store1")
                    .Data(Model)
                    .Reader(new ArrayReader())
                    .Model(X.Model()
                        .Fields(f =>
                        {
                            f.Add(X.ModelField().Name("paciente"));
                            f.Add(X.ModelField().Name("monto").Type(ModelFieldType.Float));
                            f.Add(X.ModelField().Name("tratamiento"));
                            /*f.Add(X.ModelField().Name("pctChange").Type(ModelFieldType.Float));
                            f.Add(X.ModelField().Name("lastChange").Type(ModelFieldType.Date).DateFormat("M/d hh:mmtt"));
                            f.Add(X.ModelField().Name("rating").Type(ModelFieldType.Int).Convert(j => j.Handler = "var pct = record.get('pctChange'); if (pct < 0) return 2; if (pct < 1) return 1; return 0;"));*/
                        })
                    )
                )
                .ColumnModel(
                    X.Column().Text("Nombre").DataIndex("paciente").Flex(1),
                    X.Column().Text("Monto").Width(75).DataIndex("monto").Renderer(RendererFormat.UsMoney),
                    X.Column().Text("Tratamiento").Width(150).DataIndex("tratamiento")
                    /*X.Column().Text("Change").Width(75).DataIndex("pctChange").Renderer("pctChange"),
                    X.DateColumn().Text("Last Updated").Width(95).DataIndex("lastChange"),
                    X.Column().Text("Rating").Width(50).Sortable(true).DataIndex("rating").Renderer("if (value == 0) return 'A'; if (value == 1) return 'B'; if (value == 2) return 'C';")*/
                )
                .Listeners(l => l.SelectionChange.Handler = "if (selected[0]) { this.up('form').getForm().loadRecord(selected[0]); }"),

        X.FieldSet()
            .ColumnWidth(0.4)
            .Title("Detalle de pago")
            .MarginSpec("0 0 0 10")
            .Defaults(d =>
            {
                d.Add(new Parameter("LabelWidth", "115"));
            })
            .Items(
                X.TextField()
                    .Name("paciente")
                    .FieldLabel("Nombre"),
                X.TextField()
                    .Name("monto")
                    .FieldLabel("Monto"),
                X.TextField()
                    .Name("tratamiento")
                    .FieldLabel("Tratamiento"),
                /*X.DateField()
                    .Name("lastChange")
                    .FieldLabel("Last Updated"),*/
                X.RadioGroup()
                    .FieldLabel("Forma de pago")
                    .ColumnsNumber(3)
                    .AutomaticGrouping(false)
                    .Items(
                        X.Radio().Name("rating").InputValue("0").BoxLabel("Efectivo"),
                        X.Radio().Name("rating").InputValue("1").BoxLabel("Tarjeta crédito/débito")
                        /*X.Radio().Name("rating").InputValue("2").BoxLabel("C").ReadOnly(true)*/
                    )
            )
        )
        .Buttons(
            X.Button()
                .Text("Generar pago")
                .OnClientClick("alert('Pago generado satisfactoriamente');"),
                /*.OnClientClick(@"var form = this.up('form'),
                                     r = form.getForm().getRecord();

                                 if (r) {
                                     form.getForm().updateRecord(form.down('grid').getSelectionModel().getLastSelected());
                                 }"),*/

            X.Button()
                .Text("Limpiar formulario")
                .OnClientClick("this.up('form').getForm().reset();")
            /*X.Button()
                .Text("Get Values...")
                .Menu(X.Menu()
                    .Items(
                        X.MenuItem()
                            .Text("Object")
                            .OnClientClick("alert(Ext.encode(this.up('form').getForm().getValues()));"),
                        X.MenuItem()
                            .Text("String")
                            .OnClientClick("alert(this.up('form').getForm().getValues(true));")
                    )
                )*/
        )
    )
</body>
</html>
